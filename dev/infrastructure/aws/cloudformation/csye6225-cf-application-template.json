{  
   "Parameters":{  
      "SecurityGroupNameWB":{  
         "Description":"Web Server Security Group Name",
         "Type":"String"
      },
      "SecurityGroupNameWBDesc":{  
         "Description":"Web Server Security Group Name",
         "Type":"String"
      },
      "CIDRBSGWB":{  
         "Description":"CIDR block for Security group ingress rule",
         "Type":"String"
      },
      "DescpIGWB1":{  
         "Description":"Ingress Rule 1 description for WB SecurityGroup",
         "Type":"String"
      },
      "FPWB1":{  
         "Description":"From port# for Ingress rule 1 for WB SecurityGroup",
         "Type":"String"
      },
      "TPWB1":{  
         "Description":"To port# for Ingress rule 1 for WB SecurityGroup",
         "Type":"String"
      },
      "IPprotocol":{  
         "Description":"IP Protocol type for Ingresss rule",
         "Type":"String"
      },
      "DescpIGWB2":{  
         "Description":"Ingress Rule 2 description for WB SecurityGroup",
         "Type":"String"
      },
      "FPWB2":{  
         "Description":"From port# for Ingress rule 2 for WB SecurityGroup",
         "Type":"String"
      },
      "TPWB2":{  
         "Description":"To port# for Ingress rule 2 for WB SecurityGroup",
         "Type":"String"
      },
      "DescpIGWB3":{  
         "Description":"Ingress Rule 3 description for WB SecurityGroup",
         "Type":"String"
      },
      "FPWB3":{  
         "Description":"From port# for Ingress rule 3 for WB SecurityGroup",
         "Type":"String"
      },
      "TPWB3":{  
         "Description":"To port# for Ingress rule 3 for WB SecurityGroup",
         "Type":"String"
      },
      "TAGSGWB":{  
         "Description":"TAG Name for WB Security Group",
         "Type":"String"
      },
      "SecurityGroupNameDB":{  
         "Description":"DB Server Security Group Name",
         "Type":"String"
      },
      "SecurityGroupNameDBDesc":{  
         "Description":"DB Security Group Name description",
         "Type":"String"
      },
      "DescpIGDB1":{  
         "Description":"Ingress Rule 1 description for DB SecurityGroup",
         "Type":"String"
      },
      "FPDB1":{  
         "Description":"From port# for Ingress rule 1 for DB SecurityGroup",
         "Type":"String"
      },
      "TPDB1":{  
         "Description":"To port# for Ingress rule 1 for DB SecurityGroup",
         "Type":"String"
      },
      "TAGSGDB":{  
         "Description":"TAG Name for DB Security Group",
         "Type":"String"
      },
      "EC2TerminationProt":{  
         "Description":"EC2 Termination protection",
         "Type":"String"
      },
      "EC2AMI":{  
         "Description":"Image ID for EC2 AMI",
         "Type":"String"
      },
      "InstanceType":{  
         "Description":"EC2 Instance type",
         "Type":"String"
      },
      "EC2AZ":{  
         "Description":"EC2 Avalibility Zone",
         "Type":"String"
      },
      "EC2Device":{  
         "Description":"EC2 Device",
         "Type":"String"
      },
      "EC2TAGNAME":{  
         "Description":"EC2 Tag Name",
         "Type":"String"
      },
      "VolSize":{  
         "Description":"Volume size",
         "Type":"String"
      },
      "VolType":{  
         "Description":"Volume type",
         "Type":"String"
      },
      "VolAZ":{  
         "Description":"Volume Avalibility Zone",
         "Type":"String"
      },
      "VolName":{  
         "Description":"Volume name",
         "Type":"String"
      },
      "DBInstanceIdentifier":{  
         "Description":"DBname",
         "Type":"String"
      }
   },
   "Resources":{  
      "SecurityGroupWB":{  
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{  
            "GroupName":{  
               "Ref":"SecurityGroupNameWB"
            },
            "GroupDescription":{  
               "Ref":"SecurityGroupNameWBDesc"
            },
            "SecurityGroupIngress":[  
               {  
                  "CidrIp":{  
                     "Ref":"CIDRBSGWB"
                  },
                  "Description":{  
                     "Ref":"DescpIGWB1"
                  },
                  "FromPort":{  
                     "Ref":"FPWB1"
                  },
                  "ToPort":{  
                     "Ref":"TPWB1"
                  },
                  "IpProtocol":{  
                     "Ref":"IPprotocol"
                  }
               },
               {  
                  "CidrIp":{  
                     "Ref":"CIDRBSGWB"
                  },
                  "Description":{  
                     "Ref":"DescpIGWB2"
                  },
                  "FromPort":{  
                     "Ref":"FPWB2"
                  },
                  "ToPort":{  
                     "Ref":"TPWB2"
                  },
                  "IpProtocol":{  
                     "Ref":"IPprotocol"
                  }
               },
               {  
                  "CidrIp":{  
                     "Ref":"CIDRBSGWB"
                  },
                  "Description":{  
                     "Ref":"DescpIGWB3"
                  },
                  "FromPort":{  
                     "Ref":"FPWB3"
                  },
                  "ToPort":{  
                     "Ref":"TPWB3"
                  },
                  "IpProtocol":{  
                     "Ref":"IPprotocol"
                  }
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Ref":"TAGSGWB"
                  }
               }
            ],
            "VpcId":{  
               "Fn::ImportValue":"cf-VPCID"
            }
         }
      },
      "SecurityGroupDB":{  
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{  
            "GroupName":{  
               "Ref":"SecurityGroupNameDB"
            },
            "GroupDescription":{  
               "Ref":"SecurityGroupNameWBDesc"
            },
            "SecurityGroupIngress":[  
               {  
                  "SourceSecurityGroupId":{  
                     "Ref":"SecurityGroupWB"
                  },
                  "Description":{  
                     "Ref":"DescpIGDB1"
                  },
                  "FromPort":{  
                     "Ref":"FPDB1"
                  },
                  "ToPort":{  
                     "Ref":"TPDB1"
                  },
                  "IpProtocol":{  
                     "Ref":"IPprotocol"
                  }
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Ref":"TAGSGDB"
                  }
               }
            ],
            "VpcId":{  
               "Fn::ImportValue":"cf-VPCID"
            }
         }
      },
      "EC2Instance":{  
         "Type":"AWS::EC2::Instance",
         "Properties":{  
            "DisableApiTermination":{  
               "Ref":"EC2TerminationProt"
            },
            "ImageId":{  
               "Ref":"EC2AMI"
            },
            "InstanceType":{  
               "Ref":"InstanceType"
            },
            "AvailabilityZone":{  
               "Ref":"EC2AZ"
            },
            "SubnetId":{  
               "Fn::ImportValue":"cf-MainPublicSubnet"
            },
	    "KeyName":"appec2",
            "SecurityGroupIds":[  
               {  
                  "Ref":"SecurityGroupWB"
               }
            ],
            "Volumes":[  
               {  
                  "Device":{  
                     "Ref":"EC2Device"
                  },
                  "VolumeId":{  
                     "Ref":"NewVolume"
                  }
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Ref":"EC2TAGNAME"
                  }
               }
            ],
            "UserData":{  
               "Fn::Base64":{  
                  "Fn::Join":[  
                     "\n",
                     [  
                        "#!/bin/bash -xe ",
                        "yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                        "systemctl start ntpd",
                        "systemctl enable ntpd",
                        "groupadd tomcat",
                        "useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                        "cd /tmp",
                        "wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
                        "mkdir /opt/tomcat",
                        "tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                        "cd /opt/tomcat",
                        "chgrp -R tomcat /opt/tomcat",
                        "chmod -R g+r conf",
                        "chmod g+x conf",
                        "chown -R tomcat webapps/ work/ temp/ logs/",
                        "cd /usr/lib/systemd/system",
                        "touch tomcat.service",
                        "echo '[Unit]' > tomcat.service",
                        "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                        "echo 'After=syslog.target network.target' >> tomcat.service",
                        "echo '[Service]' >> tomcat.service",
                        "echo 'Type=forking' >> tomcat.service",
                        "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
                        "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                        "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                        "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                        "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                        "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
                        "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                        "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                        "echo 'User=tomcat' >> tomcat.service",
                        "echo 'Group=tomcat' >> tomcat.service",
                        "echo 'UMask=0007' >> tomcat.service",
                        "echo 'RestartSec=10' >> tomcat.service",
                        "echo 'Restart=always' >> tomcat.service",
                        "echo '[Install]' >> tomcat.service",
                        "echo 'WantedBy=multi-user.target' >> tomcat.service",
                        "systemctl daemon-reload",
                        "#systemctl start cloudwatch.service",
                        "#systemctl enable cloudwatch.service",
                        "systemctl enable tomcat.service",
                        "systemctl start tomcat.service",
			"wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm"
			"sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm",
			"sudo yum update",
			"sudo yum install mysql-server -y",
			"sudo systemctl start mysqld -y",
                        "sudo mysql -u csye6225master -h ${RDSInstance.Endpoint.Address} -p csye6225password"
                     ]
                  ]
               }
            },
		"IamInstanceProfile": "ec2instanceprofile"
         }
      },
      "NewVolume":{  
         "Type":"AWS::EC2::Volume",
         "Properties":{  
            "Size":{  
               "Ref":"VolSize"
            },
            "VolumeType":{  
               "Ref":"VolType"
            },
            "AvailabilityZone":{  
               "Ref":"VolAZ"
            },
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":{  
                     "Ref":"VolName"
                  }
               }
            ]
         }
      },
      "myDynamoDBTable":{  
         "Type":"AWS::DynamoDB::Table",
         "Properties":{  
            "AttributeDefinitions":[  
               {  
                  "AttributeName":"id",
                  "AttributeType":"S"
               }
            ],
            "KeySchema":[  
               {  
                  "AttributeName":"id",
                  "KeyType":"HASH"
               }
            ],
            "ProvisionedThroughput":{  
               "ReadCapacityUnits":"5",
               "WriteCapacityUnits":"5"
            },
            "TableName":"csye6225",
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":"RDS"
               }
            ]
         }
      },
      "S3bucket":{  
         "Type":"AWS::S3::Bucket",
         "Properties":{  
            "BucketName":"csye6225-fall2018-nagarep.me.tld.csye6225.com"
         }
      },
      "RDSInstance":{  
         "Type":"AWS::RDS::DBInstance",
         "Properties":{  
            "DBName":"csye6225",
            "AllocatedStorage":"5",
            "DBInstanceClass":"db.t2.medium",
            "Engine":"mysql",
            "EngineVersion":"5.6.37",
            "MasterUsername":"csye6225master",
            "MasterUserPassword":"csye6225password",
            "MultiAZ":false,
	    "VPCSecurityGroups" :[{"Ref": "SecurityGroupDB"}],
            "PubliclyAccessible":false,
            "DBInstanceIdentifier":{  
               "Ref":"DBInstanceIdentifier"
            },
            "DBSubnetGroupName":{  
               "Fn::ImportValue":"cf-DBPrivateSubnets"
            },
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":"MySQLDatabase"
               }
            ]
         }
      }
         }
   }
